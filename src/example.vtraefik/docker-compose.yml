services:
  traefik:
    image:
      traefik:v2.10
    ports:
      - 80:80
    depends_on:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TRAEFIK_ENTRYPOINTS_WEB_ADDRESS=:80
      - TRAEFIK_PING=true
      - TRAEFIK_PROVIDERS_DOCKER=true

  web:
    build: .
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    labels:
      - traefik.enable=true
      - traefik.http.routers.http-next.entrypoints=web
      - traefik.http.routers.http-next.tls=false
      - traefik.http.routers.http-next.service=http-next
      - traefik.http.services.http-next.loadbalancer.server.port=3000

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    labels:
      - traefik.enable=false

  cron:
    image: alpine/curl
    command: >
      sh -c "
        echo '*/10 * * * * curl -X POST http://web:3000/db/clear' > /etc/crontabs/root && \
        crond -f -l 2
      "
    depends_on:
      - web
    labels:
      - traefik.enable=false

volumes:
  postgres_data:

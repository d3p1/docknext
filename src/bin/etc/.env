##
# @description Base environment variables
# @author      C. M. de Picciotto <d3p1@d3p1.dev> (https://d3p1.dev/)
# @note        Environment variables used to sync and setup
#              services/containers so they work properly with the
#              Next.js environment/platform
# @note        Environment variables defined by the `docknext` script
#              use the `SCRIPT_` prefix
# @note        This file environment variables and
#              host shell environment variables use the `BASE_` prefix
# @note        Remember that the environment variables defined inside a `.env`
#              file take only effect inside Docker Compose files and other
#              environment files
# @link        https://docs.docker.com/compose/environment-variables/set-environment-variables/
##

##
# @note Environment variables to share host information
##
BASE_DOCKER_PATH="${SCRIPT_DOCKER_PATH}"
BASE_USER_EMAIL="${SCRIPT_USER_EMAIL}"

##
# @note Environment variable to share Next.js environment domain
##
BASE_DOMAIN="${SCRIPT_DOMAIN}"

##
# @note Environment variables to define document root of the platform
##
BASE_DOC_ROOT_DIR="${SCRIPT_DOC_ROOT_DIR}"

##
# @note Set `node` version that will be used in the environment
##
BASE_NODE_VERSION="${SCRIPT_NODE_VERSION}"

##
# @note Set default Docker Compose files to setup environment
# @note `COMPOSE_PROFILES` allow us to define optional services to run.
#       Core services do not have profiles, so they are always started.
#       Optional services do have profiles, so they will be started only
#       when its profile is defined in this environment variable.
#       In this way, just running `docker compose up -d` will start
#       all required services
# @link https://pscheit.medium.com/docker-compose-advanced-configuration-541356d121de
##
COMPOSE_PROFILES="${SCRIPT_COMPOSE_PROFILES}"
COMPOSE_PATH_SEPARATOR=":"
COMPOSE_FILE="${SCRIPT_COMPOSE_FILE}"